
# 全局配置
$isWindowsHome = $true
$userName = 'zhangyf'
$ramDiskPath = 'Z:'
$ramDiskTempPath = "$ramDiskPath\Temp"
$isEnableAdministrator = $false
# Note: `$ramDiskPath` may be not available during init
$tempDirPath = 'Z:/'

$isManualEditHostFile = $false
$blockUrls = @('www.gilisoft.com',
               'gilisoft.com')

# set text edit tool
Set-Alias -Name edit -Value "C:\Program Files\Notepad++\notepad++.exe"

# set current location to avoid mistakes
Set-Location $tempDirPath



# 配置Windows系统

# 启用 组策略 (group policy)
if ($isWindowsHome) {
  $cmdCommandStr = 
@"
@echo off
pushd "%~dp0"
dir /b C:\Windows\servicing\Packages\Microsoft-Windows-GroupPolicy-ClientExtensions-Package~3*.mum >List.txt
dir /b C:\Windows\servicing\Packages\Microsoft-Windows-GroupPolicy-ClientTools-Package~3*.mum >>List.txt
for /f %%i in ('findstr /i . List.txt 2^>nul') do dism /online /norestart /add-package:"C:\Windows\servicing\Packages\%%i"
"@

  $batFilePath = "$tempDirPath/run.bat"
  $cmdCommandStr | Out-File 'utf8' -FilePath $batFilePath
  .$batFilePath
  Remove-Item $batFilePath
}

# 设置并设置 Ramdisk
# 安装 RAMDisk，设置盘符为 Z，将环境变量中的临时变量（Temp，Tmp），以及IE临时文件夹指向该盘

# 关闭休眠
powercfg -h off

# 关闭系统还原

# 设置分区为不允许索引文件内容

# 关闭UAC，病毒防护，防火墙，Windows声音

# 启用 administrator 账户
if ($isEnableAdministrator) {
  net user administrator /active:yes
}

# 设置键盘映射，可以使用 KeybMap（需要设为全局映射，当前用户映射可能无效） 或是直接操作注册表
{
  # this one echanges caps lock and esc (such value can be generated by KeybMap)
  $valueString = '0,0,0,0,0,0,0,0,3,0,0,0,3A,0,1,0,1,0,3A,0,0,0,0,0'
  $value = ($valueString -split ',') | ForEach-Object -Process { [System.Convert]::ToByte($_,16) }
  
  $keyboardLayoutKeyPath = 'HKLM:\SYSTEM\CurrentControlSet\Control\Keyboard Layout'
  $scancodeMapName =  'Scancode Map'
  $scancodeMapProperty = Get-ItemProperty -Path $keyboardLayoutKeyPath -Name $scancodeMapName

  # set scancode map property value
  if ($scancodeMapProperty) { # if scancode map property already exists 
    Set-ItemProperty -Path $keyboardLayoutKeyPath -Name $scancodeMapName -Value $value
  } else { # create scancode map property if it does not exist
    New-ItemProperty -Path $keyboardLayoutKeyPath -Name $scancodeMapName -Value $value -PropertyType binary
  }
}

# 设置 Hosts
{
  # Edit-Hosts.ps1
  $hostFilePath = "$env:windir/System32/drivers/etc/hosts"

  if ($blockUrls.Count -gt 1) {
    $blockUrlLines = $blockUrls | ForEach-Object { "127.0.0.1 $_" }
    # Note: '' adds a empty line between current content and the new content
    $blockContent = @('', '# Block urls') + $blockUrlLines
    # Note: Get-Content returns string of lines
    $newContent = (Get-Content $hostFilePath) + $blockContent
    Set-Content $hostFilePath $newContent
  }

  if ($isManualEditHostFile) {
    edit $hostFilePath
  }
}



# 安装和配置常用软件

# Firefox
{
  # 配置 gooreplacer
}

# Edge
{
  # 移除现有 Cache 目录，同时硬链接到 Ramdisk
  $rawEdgeCachePosition = "C:\Users\$userName\AppData\Local\Microsoft\Edge\User Data\Default\cache"
  $targetEdgeCachePosition = "$ramDiskTempPath\EdgeCache"
  Remove-Item $rawEdgeCachePosition -Recurse -Force
  New-Item -Path $targetEdgeCachePosition -ItemType Directory
  New-Item -Path $rawEdgeCachePosition -ItemType SymbolicLink -Value "$ramDiskTempPath\EdgeCache"
  # Note: mklink 是 cmd 的内置命令，Powershell 无法使用
  # mklink /J $rawEdgeCachePosition "$ramDiskTempPath\EdgeCache"

  # Note: 由于 Edge 不会自动创建 Cache 文件夹，需要添加 $targetEdgeCachePosition 到 Ramdisk 的新建文件夹
}

# Office
{
  # 安装 Office
  # Note: 直接点击安装的是32bit版本，点击office文件下的 Setup64.exe ；需启动 Windows Installer 服务

  # 安装 Visio
  # 如果更新 Office 时出现错误代码 30182-1 (2)，则将 HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Office\ClickToRun\Configuration\AllowCdnFallback : "True" （在 Configuration 下新建字符串值 True）
  # @see https://support.microsoft.com/zh-cn/office/%e6%9b%b4%e6%96%b0-office-%e6%97%b6%e5%87%ba%e7%8e%b0%e9%94%99%e8%af%af%e4%bb%a3%e7%a0%81-30182-1-2-6a8d49a6-db50-40d1-9a70-1f93b095c774?ns=ocsac2rclientupdate&version=16&syslcid=2052&uilcid=2052&appver=cle160&helpid=%222-1-30182%22&ui=zh-cn&rs=zh-cn&ad=cn

  # 设置 Office 选项，关闭 Office 更新/遥测/开始页
}



# 安装和配置开发环境和软件

# JDK
# Optional: JRE8 for JNLP，关闭更新和控制台，允许 http://192.168.2.126

# git
# 令git保存输入的账号密码
git config --global credential.helper store

# Miktex & TexWorks
# 导入 TexWorks 配置

# VS
# 删除右键菜单 “在visual studio中打开”
Get-Item Registry::HKEY_CLASSES_ROOT\Directory\Background\shell\AnyCode | Remove-Item -Recurse
Get-Item Registry::HKEY_CLASSES_ROOT\Directory\shell\AnyCode | Remove-Item -Recurse

# IDEA



# 完成所有安装后的设置

# 禁用 Windows 更新
{
  # 需要禁用4个服务，其中后两者需要提权到 System 后禁用或通过修改注册表禁用
  # Background Intelligent Transfer Service
  # Windows Update
  # Update Orchestrator Service
  # Windows Update Medic Service

  Get-Service 'bits' | Set-Service -StartupType Disabled
  Get-Service 'wuauserv' | Set-Service -StartupType Disabled

  function Set-StartAndFailureActions($path) {
    Set-ItemProperty -Path $path -Name 'Start' -Value 0x4
    $property = Get-ItemProperty -Path $path -Name 'FailureActions'
    $propertyValue = $property.FailureActions
    $propertyValue[20] = 0
    $propertyValue[28] = 0
    Set-ItemProperty -Path $path -Name 'FailureActions' -Value $propertyValue
  }

  # 禁用 Windows Update Medic Service 并设置恢复操作
  $waaSMedicSvcKeyPath = 'HKLM:\SYSTEM\CurrentControlSet\Services\WaaSMedicSvc'
  # $waaSMedicSvcStartProperty = Get-ItemProperty -Path $waaSMedicSvcKeyPath -Name ‘Start’
  Set-StartAndFailureActions $waaSMedicSvcKeyPath
  
  # 禁用 Update Orchestrator Service 并设置恢复操作
  net stop UsoSvc | Out-Null
  Get-Service 'UsoSvc' | Set-Service -StartupType Disabled # or use: sc.exe config UsoSvc start=DISABLED | Out-Null
  Set-StartAndFailureActions 'HKLM:\SYSTEM\CurrentControlSet\Services\UsoSvc'
  Set-StartAndFailureActions 'HKLM:\SYSTEM\ControlSet001\Services\UsoSvc'

  # 在组策略中禁用更新策略
  # gpedit.msc
  # 计算机配置 – 管理模块 – windows组件 – windows更新 –配置自动更新 – 已禁用
}

# 禁用不必要的计划任务，部分任务仅管理员权限不够，需要System权限
{
  # 禁用这些路径下的所有任务
  $pathsToDisable = 
    #'\Microsoft\Windows\UpdateOrchestrator\',
    '\Microsoft\Windows\Customer Experience Improvement Program\',
    '\Microsoft\Office\'

  # 禁用指定任务
  $pathAndNamesToDisable = 
    @('\Microsoft\Windows\WindowsUpdate\', 'Scheduled Start'),
    @('\Microsoft\VisualStudio\Updates\', 'BackgroundDownload')

  Get-ScheduledTask -TaskPath $pathsToDisable | Disable-ScheduledTask
  
  foreach ($pathAndName in $pathAndNamesToDisable) {
    Get-ScheduledTask -TaskPath $pathAndName[0] -TaskName $pathAndName[1] | Disable-ScheduledTask
  }
}

# 清理注册表右键新建菜单
{
  # 打开 Regedit，HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Discardable\PostSetup\ShellNew，删除 Classes 中的多余项
  # 搜索 HKEY_LOCAL_MACHINE\SOFTWARE\Classes 下的对应扩展名项，删除对应的 ShellNew 项
}

# 设置 sendto
{
  # explorer 打开 shell:sendto，删除无用项，添加指向 RAMDisk 的项
}
# @see http://www.cnblogs.com/Rainr/archive/2012/01/21/2328046.html
# @see https://cyber-defense.sans.org/blog/2010/02/11/powershell-byte-array-hex-convert

# this one echanges caps lock and esc, and map scroll lock and right alt to application
# such value can be generated by KeybMap
$valueString = '00,00,00,00,00,00,00,00,05,00,00,00,5D,E0,46,00,3A,00,01,00,01,00,3A,00,5D,E0,38,E0,00,00,00,00'
$value = ($valueString -split ',') | ForEach-Object -Process { [System.Convert]::ToByte($_,16) }

$keyboardLayoutKeyPath = 'HKLM:\SYSTEM\CurrentControlSet\Control\Keyboard Layout'
$scancodeMapName =  'Scancode Map'

# print current scancode map property value
$keyboardLayoutKey = Get-ItemProperty -Path $keyboardLayoutKeyPath -Name $scancodeMapName
# $keyboardLayoutKey | Get-Member -MemberType *Property # | Format-List
($keyboardLayoutKey.'Scancode Map' | ForEach-Object { $_.ToString('X') }) -join ',' | Write-Host

# set scancode map property value
if (Get-ItemProperty -Path $keyboardLayoutKeyPath -Name $scancodeMapName) {
  Set-ItemProperty -Path $keyboardLayoutKeyPath -Name $scancodeMapName -Value $value
} else { # create property if not exists
  New-ItemProperty -Path $keyboardLayoutKeyPath -Name $scancodeMapName -Value $value -PropertyType binary
}
